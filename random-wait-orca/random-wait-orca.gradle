buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
//    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
  }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

//configurations.implementation.canBeResolved = true

repositories {
  mavenCentral()
  jcenter()
  maven { url "http://dl.bintray.com/spinnaker/spinnaker/" }
}

spinnakerPlugin {
  serviceName = "orca"
  pluginClass = "io.armory.plugin.stage.wait.random.RandomWaitPlugin"
  requires="orca>=0.0.0"
}

dependencies {
  compileOnly(group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}")
  compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  compileOnly (group: 'com.netflix.spinnaker.kork', name: 'kork-plugins-api', version: "${korkVersion}")
  compileOnly (group: 'com.netflix.spinnaker.orca', name: 'orca-api', version: "${orcaVersion}")
//  compile("org.springframework.boot:spring-boot-starter")
//  compile("org.springframework:spring-web")
//  compile("com.fasterxml.jackson.core:jackson-databind")

  kapt(group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}")

  testImplementation (group: 'com.netflix.spinnaker.orca', name: 'orca-api', version: "${orcaVersion}")

  testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
  testImplementation group: 'io.strikt', name: 'strikt-core', version: '0.22.1'
  testImplementation group: 'dev.minutest', name: 'minutest', version: '1.10.0'
  testImplementation group: 'io.mockk', name: 'mockk', version: '1.9.3'

  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.0"
  testRuntime "org.junit.platform:junit-platform-launcher:1.4.0"
  testRuntime "org.junit.platform:junit-platform-commons:1.5.2"
}

tasks.withType(Test) {
  useJUnitPlatform()
}
